schema;node_olympus_schema:
  type: map
  nullable: false
  mapping:
    nodejs: {type: str, nullable: false, range: {min: 1}, func: dir_exists}
    debug: {type: bool, nullable: false}
    show_passwords: {type: bool, nullable: false}
    authentication:
      type: map
      nullable: false
      allowempty: true
      mapping:
        gameMasterPassword: {type: str, required: true, nullable: false, range: {min: 1}}
        blueCommanderPassword: {type: str, required: true, nullable: false, range: {min: 1}}
        redCommanderPassword: {type: str, required: true, nullable: false, range: {min: 1}}
        adminPassword: {type: str, nullable: false, range: {min: 1}}
schema;instance_olympus_schema:
  type: map
  nullable: false
  allowempty: true
  mapping:
    enabled: {type: bool, nullable: false}
    debug: {type: bool, nullable: false}
    show_passwords: {type: bool, nullable: false}
    url: {type: url, nullable: false}
    regex;(backend|server):
      type: map
      nullable: false
      required: true
      allowempty: true
      mapping:
        address: {type: str, nullable: false, range: {min: 1}}
        port: {type: int, required: true, nullable: false, default: 4512, func: unique_port}
    authentication:
      type: map
      nullable: false
      allowempty: true
      mapping:
        gameMasterPassword: {type: str, required: true, nullable: false, range: {min: 1}}
        blueCommanderPassword: {type: str, required: true, nullable: false, range: {min: 1}}
        redCommanderPassword: {type: str, required: true, nullable: false, range: {min: 1}}
        adminPassword: {type: str, nullable: false, range: {min: 1}}
    regex;(frontend|client):
      type: map
      nullable: false
      required: true
      allowempty: true
      mapping:
        path: {type: str, nullable: false, range: {min: 1}, func: dir_exists}
        port: {type: int, required: true, nullable: false, default: 3000, func: unique_port}
        customAuthHeaders:
          type: map
          nullable: false
          mapping:
            enabled: {type: bool, nullable: false}
            username: {type: str, nullable: false, range: {min: 1}}
            group: {type: str, nullable: false, range: {min: 1}}
        elevationProvider:
          type: map
          nullable: false
          mapping:
            provider: {type: url, nullable: false}
            username: {type: str}
            password: {type: str}
        mapLayers:
          type: map
          nullable: false
          mapping:
            regex;(.+):
              type: map
              nullable: false
              mapping:
                urlTemplate: {type: url, nullable: false}
                minZoom: {type: int, range: {min: 1}}
                maxZoom: {type: int, range: {max: 100}}
                attribution: {type: str, nullable: false, range: {min: 1}}
        mapMirrors:
          type: map
          nullable: false
          mapping:
            regex;(.+): { type: url, nullable: false}
        autoconnectWhenLocal: {type: bool, nullable: false}
        proxyHeader: {type: str, nullable: false, range: {min: 1}}
    audio:
      type: map
      nullable: false
      required: true
      mapping:
        SRSPort: {type: int, nullable: false, func: obsolete}
        WSPort: {required: true, type: int, nullable: false, default: 4000, func: unique_port}
        WSEndpoint: {type: str, nullable: false, range: {min: 1}}
