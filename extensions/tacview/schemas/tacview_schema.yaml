schema;node_tacview_schema:
  type: map
  allowempty: true  # we might want to specify additional tacview parameters, which are then not validated
  nullable: false
  mapping:
    installation: {type: str, nullable: false, range: {min: 1}, func: dir_exists}
    tacviewExportPath: {type: str, nullable: false, range: {min: 1}}
schema;instance_tacview_schema:
  type: map
  allowempty: true  # we might want to specify additional tacview parameters, which are then not validated
  nullable: false
  mapping:
    enabled: {type: bool, nullable: false}
    autoupdate: {type: bool, nullable: false}
    host: {type: str, nullable: false}
    log: {type: str, nullable: false}
    tacviewExportPath: {type: str, nullable: false}
    tacviewAutoDiscardFlights: {type: int, nullable: false}
    tacviewDebugMode: {type: int, nullable: false}
    tacviewFlightDataRecordingEnabled: {type: bool, nullable: false}
    tacviewModuleEnabled: {type: bool, nullable: false}
    tacviewMultiplayerFlightsAsClient: {type: int, nullable: false}
    tacviewMultiplayerFlightsAsHost: {type: int, nullable: false}
    tacviewRealTimeTelemetryEnabled: {type: bool,nullable: false}
    tacviewRealTimeTelemetryPort: {type: int, nullable: false, func: unique_port}
    tacviewRealTimeTelemetryPassword: {type: str, nullable: false}
    tacviewRemoteControlEnabled: {type: bool, nullable: false}
    tacviewRemoteControlPort: {type: int, nullable: false, func: unique_port}
    tacviewRemoteControlPassword: {type: str, nullable: false}
    tacviewSinglePlayerFlights: {type: int, nullable: false}
    tacviewTerrainExport: {type: int, nullable: false}
    tacviewPlaybackDelay: {type: int, range: {min: 0}, nullable: false}
    target: {type: str, nullable: false, range: {min: 1}}
